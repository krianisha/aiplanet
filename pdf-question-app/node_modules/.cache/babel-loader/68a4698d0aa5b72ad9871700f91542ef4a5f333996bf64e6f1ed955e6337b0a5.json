{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\pdf-chat-application-main\\\\pdf-chat-application-main\\\\PDF_application\\\\pdf-question-app\\\\src\\\\QuestionContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// QuestionContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionContext = /*#__PURE__*/createContext();\nexport const QuestionProvider = ({\n  children\n}) => {\n  _s();\n  // State to store the list of questions and answers\n  const [questions, setQuestions] = useState([]);\n  /**\r\n   * Adds a new question and its corresponding answer to the list of questions.\r\n   *\r\n   * @param {string} question - The question text.\r\n   * @param {string} answer - The answer to the question.\r\n   */\n  const addQuestion = (question, answer) => {\n    setQuestions(prevQuestions => [...prevQuestions, {\n      question,\n      answer\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(QuestionContext.Provider, {\n    value: {\n      questions,\n      addQuestion\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionProvider, \"bGJpJfCjAm0mXGpMC+11bDyoUr4=\");\n_c = QuestionProvider;\nexport const useQuestionContext = () => {\n  _s2();\n  return useContext(QuestionContext);\n};\n_s2(useQuestionContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"QuestionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","QuestionContext","QuestionProvider","children","_s","questions","setQuestions","addQuestion","question","answer","prevQuestions","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useQuestionContext","_s2","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/pdf-chat-application-main/pdf-chat-application-main/PDF_application/pdf-question-app/src/QuestionContext.js"],"sourcesContent":["// QuestionContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\nconst QuestionContext = createContext();\r\n\r\nexport const QuestionProvider = ({ children }) => {\r\n  // State to store the list of questions and answers\r\n  const [questions, setQuestions] = useState([]);\r\n  /**\r\n   * Adds a new question and its corresponding answer to the list of questions.\r\n   *\r\n   * @param {string} question - The question text.\r\n   * @param {string} answer - The answer to the question.\r\n   */\r\n  const addQuestion = (question, answer) => {\r\n    setQuestions((prevQuestions) => [...prevQuestions, { question, answer }]);\r\n  };\r\n\r\n  return (\r\n    <QuestionContext.Provider value={{ questions, addQuestion }}>\r\n      {children}\r\n    </QuestionContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuestionContext = () => useContext(QuestionContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C;AACF;AACA;AACA;AACA;AACA;EACE,MAAMS,WAAW,GAAGA,CAACC,QAAQ,EAAEC,MAAM,KAAK;IACxCH,YAAY,CAAEI,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAE;MAAEF,QAAQ;MAAEC;IAAO,CAAC,CAAC,CAAC;EAC3E,CAAC;EAED,oBACET,OAAA,CAACC,eAAe,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEP,SAAS;MAAEE;IAAY,CAAE;IAAAJ,QAAA,EACzDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACZ,EAAA,CAlBWF,gBAAgB;AAAAe,EAAA,GAAhBf,gBAAgB;AAoB7B,OAAO,MAAMgB,kBAAkB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtB,UAAU,CAACI,eAAe,CAAC;AAAA;AAACkB,GAAA,CAAvDD,kBAAkB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}