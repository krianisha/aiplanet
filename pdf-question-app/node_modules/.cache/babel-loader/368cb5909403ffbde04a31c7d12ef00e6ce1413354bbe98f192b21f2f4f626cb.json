{"ast":null,"code":"// QuestionContext.js\nimport React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const QuestionContext=/*#__PURE__*/createContext();export const QuestionProvider=_ref=>{let{children}=_ref;// State to store the list of questions and answers\nconst[questions,setQuestions]=useState([]);/**\r\n   * Adds a new question and its corresponding answer to the list of questions.\r\n   *\r\n   * @param {string} question - The question text.\r\n   * @param {string} answer - The answer to the question.\r\n   */const addQuestion=(question,answer)=>{setQuestions(prevQuestions=>[...prevQuestions,{question,answer}]);};return/*#__PURE__*/_jsx(QuestionContext.Provider,{value:{questions,addQuestion},children:children});};export const useQuestionContext=()=>useContext(QuestionContext);","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","QuestionContext","QuestionProvider","_ref","children","questions","setQuestions","addQuestion","question","answer","prevQuestions","Provider","value","useQuestionContext"],"sources":["C:/Users/HP/Downloads/pdf-chat-application-main/pdf-chat-application-main/PDF_application/pdf-question-app/src/QuestionContext.js"],"sourcesContent":["// QuestionContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\nconst QuestionContext = createContext();\r\n\r\nexport const QuestionProvider = ({ children }) => {\r\n  // State to store the list of questions and answers\r\n  const [questions, setQuestions] = useState([]);\r\n  /**\r\n   * Adds a new question and its corresponding answer to the list of questions.\r\n   *\r\n   * @param {string} question - The question text.\r\n   * @param {string} answer - The answer to the question.\r\n   */\r\n  const addQuestion = (question, answer) => {\r\n    setQuestions((prevQuestions) => [...prevQuestions, { question, answer }]);\r\n  };\r\n\r\n  return (\r\n    <QuestionContext.Provider value={{ questions, addQuestion }}>\r\n      {children}\r\n    </QuestionContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuestionContext = () => useContext(QuestionContext);\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,eAAe,cAAGL,aAAa,CAAC,CAAC,CAEvC,MAAO,MAAM,CAAAM,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C;AACA,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC9C;AACF;AACA;AACA;AACA;AACA,KACE,KAAM,CAAAS,WAAW,CAAGA,CAACC,QAAQ,CAAEC,MAAM,GAAK,CACxCH,YAAY,CAAEI,aAAa,EAAK,CAAC,GAAGA,aAAa,CAAE,CAAEF,QAAQ,CAAEC,MAAO,CAAC,CAAC,CAAC,CAC3E,CAAC,CAED,mBACET,IAAA,CAACC,eAAe,CAACU,QAAQ,EAACC,KAAK,CAAE,CAAEP,SAAS,CAAEE,WAAY,CAAE,CAAAH,QAAA,CACzDA,QAAQ,CACe,CAAC,CAE/B,CAAC,CAED,MAAO,MAAM,CAAAS,kBAAkB,CAAGA,CAAA,GAAMhB,UAAU,CAACI,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}