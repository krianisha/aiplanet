{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\pdf-chat-application-main\\\\pdf-chat-application-main\\\\PDF_application\\\\pdf-question-app\\\\src\\\\PdfUpload.js\",\n  _s = $RefreshSig$();\n// PdfUpload.js\nimport React, { useState } from 'react';\n\n/**\r\n * PdfUpload component for uploading PDF files.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfUpload = ({\n  onFileUpload,\n  setFilename,\n  setIsUploadModalOpen\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    setFilename(file ? file.name : '');\n  };\n  const handleFileUpload = async () => {\n    if (selectedFile) {\n      try {\n        // Create a FormData object to send the file\n        const formData = new FormData();\n        formData.append('file', selectedFile);\n\n        // Make a POST request to the backend FastAPI server\n        const response = await fetch('http://localhost:8000/upload-pdf/', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const result = await response.json();\n          setFilename(result.metadata.filename);\n          console.log('Uploaded File:', selectedFile);\n          console.log('Filename:', result.metadata.filename);\n          setIsUploadModalOpen(false);\n        } else {\n          // Handlingthe error response\n          alert('Failed to upload the PDF:', response.statusText);\n          console.error('Failed to upload the PDF:', response.statusText);\n        }\n      } catch (error) {\n        alert('Error while uploading the PDF:', error);\n        console.error('Error while uploading the PDF:', error);\n      }\n    } else {\n      // Display an error message for no file selected\n      alert('Please select a PDF file to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      className: \"fileInput\",\n      id: \"fileInput\",\n      accept: \".pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = PdfUpload;\nexport default PdfUpload;\nvar _c;\n$RefreshReg$(_c, \"PdfUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfUpload","onFileUpload","setFilename","setIsUploadModalOpen","_s","selectedFile","setSelectedFile","handleFileChange","event","file","target","files","name","handleFileUpload","formData","FormData","append","response","fetch","method","body","ok","result","json","metadata","filename","console","log","alert","statusText","error","children","type","className","id","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/pdf-chat-application-main/pdf-chat-application-main/PDF_application/pdf-question-app/src/PdfUpload.js"],"sourcesContent":["// PdfUpload.js\r\nimport React, { useState } from 'react';\r\n\r\n/**\r\n * PdfUpload component for uploading PDF files.\r\n */\r\n\r\n\r\nconst PdfUpload = ({ onFileUpload, setFilename, setIsUploadModalOpen }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setSelectedFile(file);\r\n        setFilename(file ? file.name : '');\r\n    };\r\n\r\n    const handleFileUpload = async () => {\r\n        if (selectedFile) {\r\n            try {\r\n                // Create a FormData object to send the file\r\n                const formData = new FormData();\r\n                formData.append('file', selectedFile);\r\n\r\n                // Make a POST request to the backend FastAPI server\r\n                const response = await fetch('http://localhost:8000/upload-pdf/', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n\r\n                if (response.ok) {\r\n\r\n                    const result = await response.json();\r\n                    setFilename(result.metadata.filename);\r\n                    console.log('Uploaded File:', selectedFile);\r\n                    console.log('Filename:', result.metadata.filename);\r\n                    setIsUploadModalOpen(false); \r\n\r\n                } else {\r\n                    // Handlingthe error response\r\n                    alert('Failed to upload the PDF:', response.statusText);\r\n                    console.error('Failed to upload the PDF:', response.statusText);\r\n                }\r\n            } catch (error) {\r\n                alert('Error while uploading the PDF:', error);\r\n                console.error('Error while uploading the PDF:', error);\r\n            }\r\n        } else {\r\n            // Display an error message for no file selected\r\n            alert('Please select a PDF file to upload.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" className=\"fileInput\" id=\"fileInput\" accept=\".pdf\" onChange={handleFileChange} />\r\n            <button onClick={handleFileUpload}>Upload File</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PdfUpload;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,YAAY;EAAEC,WAAW;EAAEC;AAAqB,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCL,eAAe,CAACG,IAAI,CAAC;IACrBP,WAAW,CAACO,IAAI,GAAGA,IAAI,CAACG,IAAI,GAAG,EAAE,CAAC;EACtC,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIR,YAAY,EAAE;MACd,IAAI;QACA;QACA,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,YAAY,CAAC;;QAErC;QACA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAC9DC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACV,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;UAEb,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UACpCrB,WAAW,CAACoB,MAAM,CAACE,QAAQ,CAACC,QAAQ,CAAC;UACrCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEtB,YAAY,CAAC;UAC3CqB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEL,MAAM,CAACE,QAAQ,CAACC,QAAQ,CAAC;UAClDtB,oBAAoB,CAAC,KAAK,CAAC;QAE/B,CAAC,MAAM;UACH;UACAyB,KAAK,CAAC,2BAA2B,EAAEX,QAAQ,CAACY,UAAU,CAAC;UACvDH,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEb,QAAQ,CAACY,UAAU,CAAC;QACnE;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZF,KAAK,CAAC,gCAAgC,EAAEE,KAAK,CAAC;QAC9CJ,OAAO,CAACI,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC,MAAM;MACH;MACAF,KAAK,CAAC,qCAAqC,CAAC;IAChD;EACJ,CAAC;EAED,oBACI7B,OAAA;IAAAgC,QAAA,gBACIhC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAC,WAAW;MAACC,EAAE,EAAC,WAAW;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAE7B;IAAiB;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpGzC,OAAA;MAAQ0C,OAAO,EAAE5B,gBAAiB;MAAAkB,QAAA,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAACpC,EAAA,CAnDIJ,SAAS;AAAA0C,EAAA,GAAT1C,SAAS;AAqDf,eAAeA,SAAS;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}