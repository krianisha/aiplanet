{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\pdf-chat-application-main\\\\pdf-chat-application-main\\\\PDF_application\\\\pdf-question-app\\\\src\\\\AskQuestion.js\",\n  _s = $RefreshSig$();\n// AskQuestion.js\n/*\r\nThis is the AskQuestion component. It is responsible for handling the user input and sending the question to the backend.\r\n\r\n*/\nimport React, { useState, useEffect } from 'react';\nimport send_btn from './send.png';\nimport { useQuestionContext } from './QuestionContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AskQuestion = ({\n  onAskQuestion,\n  filename,\n  userImage\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const {\n    addQuestion\n  } = useQuestionContext();\n  const handleQuestionChange = event => {\n    setQuestion(event.target.value);\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleAskQuestion();\n    }\n  };\n  useEffect(() => {\n    console.log('Question:', question);\n  }, [question]);\n  useEffect(() => {\n    console.log('Filename:', filename);\n  }, [filename]);\n  const handleAskQuestion = async () => {\n    if (question) {\n      // Log the question and filename to console for testing\n      console.log('Question:', question);\n      console.log('Filename:', filename);\n    }\n    ;\n    if (question && filename) {\n      try {\n        // Make a POST request to the backend\n        const response = await fetch('http://localhost:8000/ask-question/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            question,\n            pdf_metadata: {\n              filename\n            }\n          })\n        });\n        console.log('pdf_metadata:', {\n          filename\n        });\n        if (response.ok) {\n          const result = await response.json();\n          addQuestion(question, result.answer);\n          onAskQuestion(result.answer);\n          setQuestion('');\n        } else {\n          // Handle the error response\n          alert('Failed to ask the question:', response.statusText);\n          console.error('Failed to ask the question:', response.statusText);\n        }\n      } catch (error) {\n        alert('Incorrect file:', error);\n        console.error('Error while asking the question:', error);\n      }\n    } else {\n      // Display an error message for no question entered\n      alert('Please enter a question.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ask-question-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"text-box\",\n        placeholder: \"Send a message...\",\n        value: question,\n        onChange: handleQuestionChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ask-question-button\",\n        onClick: handleAskQuestion,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"ask-question-button\",\n          src: send_btn,\n          alt: \"sendbtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 85\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(AskQuestion, \"Zz+yO3Ytos8MdGh5ztyAixfZW0Q=\", false, function () {\n  return [useQuestionContext];\n});\n_c = AskQuestion;\nexport default AskQuestion;\nvar _c;\n$RefreshReg$(_c, \"AskQuestion\");","map":{"version":3,"names":["React","useState","useEffect","send_btn","useQuestionContext","jsxDEV","_jsxDEV","AskQuestion","onAskQuestion","filename","userImage","_s","question","setQuestion","addQuestion","handleQuestionChange","event","target","value","handleKeyDown","key","shiftKey","preventDefault","handleAskQuestion","console","log","response","fetch","method","headers","body","JSON","stringify","pdf_metadata","ok","result","json","answer","alert","statusText","error","className","children","id","placeholder","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/pdf-chat-application-main/pdf-chat-application-main/PDF_application/pdf-question-app/src/AskQuestion.js"],"sourcesContent":["// AskQuestion.js\r\n/*\r\nThis is the AskQuestion component. It is responsible for handling the user input and sending the question to the backend.\r\n\r\n*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport send_btn from './send.png';\r\nimport { useQuestionContext } from './QuestionContext';\r\n\r\nconst AskQuestion = ({ onAskQuestion, filename, userImage }) => {\r\n    const [question, setQuestion] = useState('');\r\n    const { addQuestion } = useQuestionContext();\r\n\r\n    const handleQuestionChange = (event) => {\r\n        setQuestion(event.target.value);\r\n    };\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter' && !event.shiftKey) {\r\n            event.preventDefault();\r\n            handleAskQuestion();\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        console.log('Question:', question);\r\n    }, [question]);\r\n\r\n    useEffect(() => {\r\n        console.log('Filename:', filename);\r\n    }, [filename]);\r\n\r\n    const handleAskQuestion = async () => {\r\n        \r\n        if (question) {\r\n            // Log the question and filename to console for testing\r\n            console.log('Question:', question);\r\n            console.log('Filename:', filename);};\r\n\r\n        if (question && filename) {\r\n            try {\r\n\r\n                // Make a POST request to the backend\r\n                const response = await fetch('http://localhost:8000/ask-question/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ \r\n                        question,\r\n                        pdf_metadata: {\r\n                            filename,\r\n                        },\r\n                    }),\r\n                });\r\n                \r\n                console.log('pdf_metadata:', { filename });\r\n                if (response.ok) {\r\n                    const result = await response.json();\r\n                    addQuestion(question, result.answer);\r\n                    onAskQuestion(result.answer);\r\n                    setQuestion(''); \r\n\r\n                } else {\r\n                    // Handle the error response\r\n                    alert('Failed to ask the question:', response.statusText);\r\n                    console.error('Failed to ask the question:', response.statusText);\r\n                }\r\n            } catch (error) {\r\n                alert('Incorrect file:', error);\r\n                console.error('Error while asking the question:', error);\r\n            }\r\n        } else {\r\n            // Display an error message for no question entered\r\n            alert('Please enter a question.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='ask-question-container'>\r\n            <div>\r\n                <textarea id='text-box' placeholder='Send a message...' value={question} onChange={handleQuestionChange}  onKeyDown={handleKeyDown}></textarea>\r\n                <button className='ask-question-button' onClick={handleAskQuestion}><img className='ask-question-button' src={send_btn} alt='sendbtn'></img></button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AskQuestion;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,kBAAkB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,aAAa;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEa;EAAY,CAAC,GAAGV,kBAAkB,CAAC,CAAC;EAE5C,MAAMW,oBAAoB,GAAIC,KAAK,IAAK;IACpCH,WAAW,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EACD,MAAMC,aAAa,GAAIH,KAAK,IAAK;IAC7B,IAAIA,KAAK,CAACI,GAAG,KAAK,OAAO,IAAI,CAACJ,KAAK,CAACK,QAAQ,EAAE;MAC1CL,KAAK,CAACM,cAAc,CAAC,CAAC;MACtBC,iBAAiB,CAAC,CAAC;IACvB;EACJ,CAAC;EACDrB,SAAS,CAAC,MAAM;IACZsB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEb,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEdV,SAAS,CAAC,MAAM;IACZsB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEhB,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMc,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAElC,IAAIX,QAAQ,EAAE;MACV;MACAY,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEb,QAAQ,CAAC;MAClCY,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEhB,QAAQ,CAAC;IAAC;IAAC;IAExC,IAAIG,QAAQ,IAAIH,QAAQ,EAAE;MACtB,IAAI;QAEA;QACA,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBpB,QAAQ;YACRqB,YAAY,EAAE;cACVxB;YACJ;UACJ,CAAC;QACL,CAAC,CAAC;QAEFe,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE;UAAEhB;QAAS,CAAC,CAAC;QAC1C,IAAIiB,QAAQ,CAACQ,EAAE,EAAE;UACb,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;UACpCtB,WAAW,CAACF,QAAQ,EAAEuB,MAAM,CAACE,MAAM,CAAC;UACpC7B,aAAa,CAAC2B,MAAM,CAACE,MAAM,CAAC;UAC5BxB,WAAW,CAAC,EAAE,CAAC;QAEnB,CAAC,MAAM;UACH;UACAyB,KAAK,CAAC,6BAA6B,EAAEZ,QAAQ,CAACa,UAAU,CAAC;UACzDf,OAAO,CAACgB,KAAK,CAAC,6BAA6B,EAAEd,QAAQ,CAACa,UAAU,CAAC;QACrE;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZF,KAAK,CAAC,iBAAiB,EAAEE,KAAK,CAAC;QAC/BhB,OAAO,CAACgB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC5D;IACJ,CAAC,MAAM;MACH;MACAF,KAAK,CAAC,0BAA0B,CAAC;IACrC;EACJ,CAAC;EAED,oBACIhC,OAAA;IAAKmC,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACnCpC,OAAA;MAAAoC,QAAA,gBACIpC,OAAA;QAAUqC,EAAE,EAAC,UAAU;QAACC,WAAW,EAAC,mBAAmB;QAAC1B,KAAK,EAAEN,QAAS;QAACiC,QAAQ,EAAE9B,oBAAqB;QAAE+B,SAAS,EAAE3B;MAAc;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC/I5C,OAAA;QAAQmC,SAAS,EAAC,qBAAqB;QAACU,OAAO,EAAE5B,iBAAkB;QAAAmB,QAAA,eAACpC,OAAA;UAAKmC,SAAS,EAAC,qBAAqB;UAACW,GAAG,EAAEjD,QAAS;UAACkD,GAAG,EAAC;QAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvC,EAAA,CA3EIJ,WAAW;EAAA,QAEWH,kBAAkB;AAAA;AAAAkD,EAAA,GAFxC/C,WAAW;AA6EjB,eAAeA,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}